name: Merge Queue Trigger

on:
  issue_comment:
    types: [created]

jobs:
  trigger-merge-queue:
    if: |
      github.event.issue.state == 'open' &&
      contains(github.event.comment.body, 'begin-merge') &&
      contains(github.event.issue.labels.*.name, 'merge-queue')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for consecutive execution prevention
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "Starting consecutive execution check..."
          python3 .github/scripts/merge_queue/check_consecutive_execution.py

      - name: Extract PR information from issue
        id: extract-prs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          echo "Starting PR information extraction..."
          python3 .github/scripts/merge_queue/extract_pr_info.py

          # Output the extracted values for workflow readability
          echo "pr_numbers=$EXTRACTED_PR_NUMBERS" >> $GITHUB_OUTPUT
          echo "release_pr=$EXTRACTED_RELEASE_PR" >> $GITHUB_OUTPUT
          echo "required_approvals=$EXTRACTED_REQUIRED_APPROVALS" >> $GITHUB_OUTPUT

          echo "âœ… Step outputs set:"
          echo "  pr_numbers: $EXTRACTED_PR_NUMBERS"
          echo "  release_pr: $EXTRACTED_RELEASE_PR"
          echo "  required_approvals: $EXTRACTED_REQUIRED_APPROVALS"

      - name: Tag merge-approvals team for approval
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          COMMENTER: ${{ github.event.comment.user.login }}
          PR_NUMBERS: ${{ steps.extract-prs.outputs.pr_numbers }}
          RELEASE_PR: ${{ steps.extract-prs.outputs.release_pr }}
        run: |
          echo "Starting team approval request..."
          python3 .github/scripts/merge_queue/tag_team_for_approval.py

      - name: Wait for approval with reminders
        id: wait-approval
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          TRIGGER_COMMENT_TIME: ${{ github.event.comment.created_at }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "Starting approval wait process..."
          python3 .github/scripts/merge_queue/wait_for_approval.py

      - name: Trigger merge queue workflow
        if: steps.wait-approval.outputs.approved == 'true'
        env:
          GH_TOKEN: ${{ secrets.CI_TRIGGER_TOKEN }}
          APPROVER: ${{ steps.wait-approval.outputs.approver }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          PR_NUMBERS: ${{ steps.extract-prs.outputs.pr_numbers }}
          RELEASE_PR: ${{ steps.extract-prs.outputs.release_pr }}
          REQUIRED_APPROVALS: ${{ steps.extract-prs.outputs.required_approvals }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "Starting merge queue workflow trigger..."
          python3 .github/scripts/merge_queue/trigger_merge_workflow.py
