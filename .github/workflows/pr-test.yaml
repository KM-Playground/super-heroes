name: PR Test Runner

# This workflow runs tests when someone comments "Ok to test" on a PR
# It includes random delays and can simulate failures based on PR body content

on:
  issue_comment:
    types: [created]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    # Only run if comment is "Ok to test" and it's on a PR (not an issue)
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, 'Ok to test')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR information
        id: pr-info
        run: |
          pr_number="${{ github.event.issue.number }}"
          echo "Getting PR information for PR #$pr_number..."

          # Get PR info including head SHA and body
          pr_info=$(gh pr view $pr_number --json headOid,body)
          head_sha=$(echo "$pr_info" | jq -r .headOid)
          pr_body=$(echo "$pr_info" | jq -r '.body // ""')

          # Set outputs
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT
          echo "head_sha=$head_sha" >> $GITHUB_OUTPUT
          echo "pr_body=$pr_body" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout PR branch
        run: |
          pr_number="${{ steps.pr-info.outputs.pr_number }}"
          echo "Checking out PR #$pr_number..."
          gh pr checkout $pr_number
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests
        id: run-tests
        run: |
          echo "Running Maven tests..."
          mvn clean test
          echo "Tests completed successfully"

      - name: Random delay
        run: |
          # Generate random number between 1 and 45
          DELAY=$((RANDOM % 45 + 1))
          echo "Sleeping for $DELAY seconds..."
          sleep $DELAY
          echo "Sleep completed"

      - name: Check for failure simulation
        id: check-failure
        run: |
          PR_BODY='${{ steps.pr-info.outputs.pr_body }}'
          if [[ "$PR_BODY" == *"FAIL"* ]]; then
            echo "PR body contains 'FAIL' - simulating test failure"
            echo "should_fail=true" >> $GITHUB_OUTPUT
          else
            echo "No failure simulation required"
            echo "should_fail=false" >> $GITHUB_OUTPUT
          fi

      - name: Simulate failure if required
        if: steps.check-failure.outputs.should_fail == 'true'
        run: |
          echo "❌ Simulating test failure as requested in PR body"
          echo "::error::Simulated test failure - PR body contains 'FAIL'"
          false

      - name: Set status to success and comment
        if: success()
        run: |
          pr_number="${{ steps.pr-info.outputs.pr_number }}"
          head_sha="${{ steps.pr-info.outputs.head_sha }}"

          # Set commit status to success
          gh api repos/${{ github.repository }}/statuses/$head_sha \
            --method POST \
            --field state=success \
            --field target_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            --field description="All tests passed" \
            --field context="run-tests"

          # Comment on PR
          gh pr comment $pr_number --body "✅ Tests passed"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set status to failure
        if: failure()
        run: |
          head_sha="${{ steps.pr-info.outputs.head_sha }}"

          # Set commit status to failure
          gh api repos/${{ github.repository }}/statuses/$head_sha \
            --method POST \
            --field state=failure \
            --field target_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            --field description="Tests failed" \
            --field context="run-tests"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


